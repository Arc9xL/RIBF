calib.cc:      double tx1 = raw->PPACTX1_s[ippac][j] * (para->ppac[ippac][j]->ch2ns_x1);
calib.cc:      double tx2 = raw->PPACTX2_s[ippac][j] * (para->ppac[ippac][j]->ch2ns_x2);
calib.cc:      double ty1 = raw->PPACTY1_s[ippac][j] * (para->ppac[ippac][j]->ch2ns_y1);
calib.cc:      double ty2 = raw->PPACTY2_s[ippac][j] * (para->ppac[ippac][j]->ch2ns_y2);
calib.cc:      double ta  = raw->PPACTA_s[ippac][j]  * (para->ppac[ippac][j]->ch2ns_a);
calib.cc:      double tsumx_min   = (para->ppac[ippac][j]->txsum_min);
calib.cc:      double tsumx_max   = (para->ppac[ippac][j]->txsum_max);
calib.cc:      double xdtimeoffset= (para->ppac[ippac][j]->xns_off);
calib.cc:      double xfactor     = (para->ppac[ippac][j]->xfactor);
calib.cc:      double xoffset     = (para->ppac[ippac][j]->xoffset);
calib.cc:      double xposoffset  = (para->ppac[ippac][j]->xpos_off);
calib.cc:      double tsumy_min   = (para->ppac[ippac][j]->tysum_min);
calib.cc:      double tsumy_max   = (para->ppac[ippac][j]->tysum_max);
calib.cc:      double ydtimeoffset= (para->ppac[ippac][j]->yns_off);
calib.cc:      double yfactor     = (para->ppac[ippac][j]->yfactor);
calib.cc:      double yoffset     = (para->ppac[ippac][j]->yoffset);
calib.cc:      double yposoffset  = (para->ppac[ippac][j]->ypos_off);
calib.cc:  cal->F3PLA_QL   = raw->F3PLA_QL_raw   - (para->plaqdc_pedestal[0][0]); //tdc channel to time in ns
calib.cc:  cal->F3PLA_QR   = raw->F3PLA_QR_raw   - (para->plaqdc_pedestal[0][1]);
calib.cc:  cal->F5PLA_QL   = raw->F5PLA_QL_raw   - (para->plaqdc_pedestal[1][0]);
calib.cc:  cal->F5PLA_QR   = raw->F5PLA_QR_raw   - (para->plaqdc_pedestal[1][1]);
calib.cc:  cal->F7PLA_QL   = raw->F7PLA_QL_raw   - (para->plaqdc_pedestal[2][0]);
calib.cc:  cal->F7PLA_QR   = raw->F7PLA_QR_raw   - (para->plaqdc_pedestal[2][1]);
calib.cc:  cal->F8PLA_QL   = raw->F8PLA_QL_raw   - (para->plaqdc_pedestal[3][0]);
calib.cc:  cal->F8PLA_QR   = raw->F8PLA_QR_raw   - (para->plaqdc_pedestal[3][1]);
calib.cc:  cal->F11PLA_QL  = raw->F11PLA_QL_raw  - (para->plaqdc_pedestal[4][0]);
calib.cc:  cal->F11PLA_QR  = raw->F11PLA_QR_raw  - (para->plaqdc_pedestal[4][1]);
calib.cc:  cal->F11LONG_QL = raw->F11LONG_QL_raw - (para->plaqdc_pedestal[5][0]);
calib.cc:  cal->F11LONG_QR = raw->F11LONG_QR_raw - (para->plaqdc_pedestal[5][1]);
calib.cc:  cal->F11VETO_QL = raw->F11VETO_QL_raw - (para->plaqdc_pedestal[6][0]);
calib.cc:  cal->F11VETO_QR = raw->F11VETO_QR_raw - (para->plaqdc_pedestal[6][1]);
calib.cc:  cal->F3PLA_TL_ns   = raw->F3PLA_TL_raw_s   * (para->platdcb3f_ch2ns); //tdc channel to time in ns
calib.cc:  cal->F3PLA_TR_ns   = raw->F3PLA_TR_raw_s   * (para->platdcb3f_ch2ns);
calib.cc:  cal->F5PLA_TL_ns   = raw->F5PLA_TL_raw_s   * (para->platdcb3f_ch2ns);
calib.cc:  cal->F5PLA_TR_ns   = raw->F5PLA_TR_raw_s   * (para->platdcb3f_ch2ns);
calib.cc:  cal->F7PLA_TL_ns   = raw->F7PLA_TL_raw_s   * (para->platdcb3f_ch2ns);
calib.cc:  cal->F7PLA_TR_ns   = raw->F7PLA_TR_raw_s   * (para->platdcb3f_ch2ns);
calib.cc:  cal->F8PLA_TL_ns   = raw->F8PLA_TL_raw_s   * (para->platdcb3f_ch2ns);
calib.cc:  cal->F8PLA_TR_ns   = raw->F8PLA_TR_raw_s   * (para->platdcb3f_ch2ns);
calib.cc:  cal->F11PLA_TL_ns  = raw->F11PLA_TL_raw_s  * (para->platdcb3f_ch2ns);
calib.cc:  cal->F11PLA_TR_ns  = raw->F11PLA_TR_raw_s  * (para->platdcb3f_ch2ns);
calib.cc:  cal->F11LONG_TL_ns = raw->F11LONG_TL_raw_s * (para->platdcb3f_ch2ns);
calib.cc:  cal->F11LONG_TR_ns = raw->F11LONG_TR_raw_s * (para->platdcb3f_ch2ns);
calib.cc:  cal->F11VETO_TL_ns = raw->F11VETO_TL_raw_s * (para->platdcb3f_ch2ns);
calib.cc:  cal->F11VETO_TR_ns = raw->F11VETO_TR_raw_s * (para->platdcb3f_ch2ns);
calib.cc:  cal->F3PLA_TL   =  cal->F3PLA_TL_ns   + (para->pla_twcoeff[0][0][0])/sqrt(cal->F3PLA_QL) + (para->pla_twcoeff[0][0][1]); //time walk correction
calib.cc:  cal->F3PLA_TR   =  cal->F3PLA_TR_ns   + (para->pla_twcoeff[0][1][0])/sqrt(cal->F3PLA_QR) + (para->pla_twcoeff[0][1][1]);
calib.cc:  cal->F5PLA_TL   =  cal->F5PLA_TL_ns   + (para->pla_twcoeff[1][0][0])/sqrt(cal->F5PLA_QL) + (para->pla_twcoeff[1][0][1]);
calib.cc:  cal->F5PLA_TR   =  cal->F5PLA_TR_ns   + (para->pla_twcoeff[1][1][0])/sqrt(cal->F5PLA_QR) + (para->pla_twcoeff[1][1][1]);
calib.cc:  cal->F7PLA_TL   =  cal->F7PLA_TL_ns   + (para->pla_twcoeff[2][0][0])/sqrt(cal->F7PLA_QL) + (para->pla_twcoeff[2][0][1]);
calib.cc:  cal->F7PLA_TR   =  cal->F7PLA_TR_ns   + (para->pla_twcoeff[2][1][0])/sqrt(cal->F7PLA_QR) + (para->pla_twcoeff[2][1][1]);
calib.cc:  cal->F8PLA_TL   =  cal->F8PLA_TL_ns   + (para->pla_twcoeff[1][0][0])/sqrt(cal->F5PLA_QL) + (para->pla_twcoeff[1][0][1]);
calib.cc:  cal->F8PLA_TR   =  cal->F8PLA_TR_ns   + (para->pla_twcoeff[1][1][0])/sqrt(cal->F5PLA_QR) + (para->pla_twcoeff[1][1][1]);
calib.cc:  cal->F11PLA_TL  =  cal->F11PLA_TL_ns  + (para->pla_twcoeff[2][0][0])/sqrt(cal->F7PLA_QL) + (para->pla_twcoeff[2][0][1]);
calib.cc:  cal->F11PLA_TR  =  cal->F11PLA_TR_ns  + (para->pla_twcoeff[2][1][0])/sqrt(cal->F7PLA_QR) + (para->pla_twcoeff[2][1][1]);
calib.cc:  cal->F11LONG_TL =  cal->F11LONG_TL_ns + (para->pla_twcoeff[1][0][0])/sqrt(cal->F5PLA_QL) + (para->pla_twcoeff[1][0][1]);
calib.cc:  cal->F11LONG_TR =  cal->F11LONG_TR_ns + (para->pla_twcoeff[1][1][0])/sqrt(cal->F5PLA_QR) + (para->pla_twcoeff[1][1][1]);
calib.cc:  cal->F11VETO_TL =  cal->F11VETO_TL_ns + (para->pla_twcoeff[2][0][0])/sqrt(cal->F7PLA_QL) + (para->pla_twcoeff[2][0][1]);
calib.cc:  cal->F11VETO_TR =  cal->F11VETO_TR_ns + (para->pla_twcoeff[2][1][0])/sqrt(cal->F7PLA_QR) + (para->pla_twcoeff[2][1][1]);
calib.cc:  cal->F7ICADCcal[0]   = (raw->F7ICADCraw[0] - para->f7icadc_pedestal[0]) * para->f7icadc_gain[0];
calib.cc:  cal->F7ICADCcal[1]   = (raw->F7ICADCraw[1] - para->f7icadc_pedestal[1]) * para->f7icadc_gain[1];
calib.cc:  cal->F7ICADCcal[2]   = (raw->F7ICADCraw[2] - para->f7icadc_pedestal[2]) * para->f7icadc_gain[2];
calib.cc:  cal->F7ICADCcal[3]   = (raw->F7ICADCraw[3] - para->f7icadc_pedestal[3]) * para->f7icadc_gain[3];
calib.cc:  cal->F7ICADCcal[4]   = (raw->F7ICADCraw[4] - para->f7icadc_pedestal[4]) * para->f7icadc_gain[4];
calib.cc:  cal->F7ICADCcal[5]   = (raw->F7ICADCraw[5] - para->f7icadc_pedestal[5]) * para->f7icadc_gain[5];
calib.cc:  cal->F11IC1ADCcal[0]   = (raw->F11IC1ADCraw[0] - para->f11icadc_pedestal[0][0]) * para->f11icadc_gain[0][0];
calib.cc:  cal->F11IC1ADCcal[1]   = (raw->F11IC1ADCraw[1] - para->f11icadc_pedestal[0][1]) * para->f11icadc_gain[0][1];
calib.cc:  cal->F11IC1ADCcal[2]   = (raw->F11IC1ADCraw[2] - para->f11icadc_pedestal[0][2]) * para->f11icadc_gain[0][2];
calib.cc:  cal->F11IC1ADCcal[3]   = (raw->F11IC1ADCraw[3] - para->f11icadc_pedestal[0][3]) * para->f11icadc_gain[0][3];
calib.cc:  cal->F11IC1ADCcal[4]   = (raw->F11IC1ADCraw[4] - para->f11icadc_pedestal[0][4]) * para->f11icadc_gain[0][4];
calib.cc:  cal->F11IC1ADCcal[5]   = (raw->F11IC1ADCraw[5] - para->f11icadc_pedestal[0][5]) * para->f11icadc_gain[0][5];
calib.cc:  cal->F11IC1ADCcal[6]   = (raw->F11IC1ADCraw[6] - para->f11icadc_pedestal[0][6]) * para->f11icadc_gain[0][6];
calib.cc:  cal->F11IC1ADCcal[7]   = (raw->F11IC1ADCraw[7] - para->f11icadc_pedestal[0][7]) * para->f11icadc_gain[0][7];
calib.cc:  cal->F11IC2ADCcal[1]   = (raw->F11IC2ADCraw[1] - para->f11icadc_pedestal[1][1]) * para->f11icadc_gain[1][1];
calib.cc:  cal->F11IC2ADCcal[2]   = (raw->F11IC2ADCraw[2] - para->f11icadc_pedestal[1][2]) * para->f11icadc_gain[1][2];
calib.cc:  cal->F11IC2ADCcal[3]   = (raw->F11IC2ADCraw[3] - para->f11icadc_pedestal[1][3]) * para->f11icadc_gain[1][3];
calib.cc:  cal->F11IC2ADCcal[4]   = (raw->F11IC2ADCraw[4] - para->f11icadc_pedestal[1][4]) * para->f11icadc_gain[1][4];
calib.cc:  cal->F11IC2ADCcal[5]   = (raw->F11IC2ADCraw[5] - para->f11icadc_pedestal[1][5]) * para->f11icadc_gain[1][5];
calib.cc:  cal->F11IC2ADCcal[6]   = (raw->F11IC2ADCraw[6] - para->f11icadc_pedestal[1][6]) * para->f11icadc_gain[1][6];
calib.cc:  cal->F11IC2ADCcal[7]   = (raw->F11IC2ADCraw[7] - para->f11icadc_pedestal[1][7]) * para->f11icadc_gain[1][7];
calib.cc:      cal->F11IC1Yanode[ii] =  (para->f11ictdc_factor[0][ii])*(tdc_ic1_anode - tdc_reference) + (para->f11ictdc_offset[0][ii]);
calib.cc:      cal->F11IC2Yanode[ii] =  (para->f11ictdc_factor[1][ii])*(tdc_ic2_anode - tdc_reference) + (para->f11ictdc_offset[1][ii]);
calib.cc:    double z_here = (para->f11iczposF11ref[0][i_anode]);
calib.cc:    double z_here = (para->f11iczposF11ref[1][i_anode]);
calib.cc:  para->LoadParameter("/home/soumya/Documents/anaroot/exp/default/db/BigRIPSPPAC.xml");
calib.cc:  para->LoadParameter("/home/soumya/Documents/anaroot/exp/default/db/BigRIPSIC.xml");
calib.cc:  para->LoadParameter("/home/soumya/Documents/anaroot/exp/default/db/BigRIPSPlastic.xml");
calib.cc:  para->LoadParameter("/home/soumya/Documents/anaroot/exp/default/db/FocalPlane.xml");
calib.cc:  std::cout <<  "f7ic  :  " << para->f7ic->detname << ",  "<<para->f7ic->zcoef[0] << ",  " << para->f7ic->zcoef[1] <<  ",  " << para->f7ic->zcoef[2] << std::endl;
calib.cc:  std::cout <<  "music1:  " << para->music1->detname << ",  "<<para->music1->zcoef[0] << ",  " << para->music1->zcoef[1] <<  ",  " << para->music1->zcoef[2] << std::endl;
calib.cc:  std::cout <<  "music2:  " << para->music2->detname << ",  "<< para->music2->zcoef[0] << ",  " << para->music2->zcoef[1] <<  ",  " << para->music2->zcoef[2] << std::endl;
calib.cc:  std::cout <<  "plastic0:  " << para->pla[0]->detname << ",  " <<  para->pla[0]->tcal_left << ",  " <<  para->pla[0]->tcal_right << std::endl;
calib.cc:  std::cout <<  "plastic1:  " << para->pla[1]->detname << ",  " <<  para->pla[1]->tcal_left << ",  " <<  para->pla[1]->tcal_right << std::endl;
calib.cc:  std::cout <<  "plastic2:  " << para->pla[2]->detname << ",  " <<  para->pla[2]->tcal_left << ",  " <<  para->pla[2]->tcal_right << std::endl;
calib.cc:  std::cout <<  "plastic3:  " << para->pla[3]->detname << ",  " <<  para->pla[3]->tcal_left << ",  " <<  para->pla[3]->tcal_right << std::endl;
calib.cc:  std::cout <<  "plastic4:  " << para->pla[4]->detname << ",  " <<  para->pla[4]->tcal_left << ",  " <<  para->pla[4]->tcal_right << std::endl;
calib.cc:  std::cout <<  "plastic5:  " << para->pla[5]->detname << ",  " <<  para->pla[5]->tcal_left << ",  " <<  para->pla[5]->tcal_right << std::endl;
calib.cc:  std::cout <<  "plastic6:  " << para->pla[6]->detname << ",  " <<  para->pla[6]->tcal_left << ",  " <<  para->pla[6]->tcal_right << std::endl;
calib.cc:  std::cout <<  "plastic7:  " << para->pla[7]->detname << ",  " <<  para->pla[7]->tcal_left << ",  " <<  para->pla[7]->tcal_right << std::endl;
calib.cc:      std::cout << para->ppac[ii][jj]->detname <<","<<para->ppac[ii][jj]->fpl <<","<<para->ppac[ii][jj]->ch2ns_a <<","<<para->ppac[ii][jj]->ch2ns_x1 <<","<<para->ppac[ii][jj]->ch2ns_y1 ;
calib.cc:      std::cout <<","<<para->ppac[ii][jj]->ch2ns_x2 <<","<<para->ppac[ii][jj]->ch2ns_y2 <<","<<para->ppac[ii][jj]->xfactor <<","<<para->ppac[ii][jj]->yfactor <<","<<para->ppac[ii][jj]->xoffset <<",";
calib.cc:      std::cout <<para->ppac[ii][jj]->yoffset <<","<<para->ppac[ii][jj]->xns_off <<","<<para->ppac[ii][jj]->yns_off <<","<<para->ppac[ii][jj]->xpos_off <<","<<para->ppac[ii][jj]->ypos_off <<",";
calib.cc:      std::cout <<para->ppac[ii][jj]->xzpos <<","<<para->ppac[ii][jj]->yzpos <<std::endl;
calib.cc:    std::cout <<  "focalplane("<< ii <<"):  id=" << para->fp[ii]->id <<",  fpl="  << para->fp[ii]->fpl <<",  zpos="  << para->fp[ii]->zpos <<",  zpos_offset=" << para->fp[ii]->zpos_offset <<std::endl;
calib.cc:  // para->dummy = 123.0 ;  std::cout << para->dummy << std::endl;  // just for test
